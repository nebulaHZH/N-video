{"version":3,"file":"tabs.js","sources":["../../../../../../packages/components/tabs/src/tabs.tsx"],"sourcesContent":["import {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport { useNamespace, useOrderedChildren } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport TabNav from './tab-nav'\n\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabsPaneContext } from './constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type TabPaneName = string | number\n\nexport const tabsProps = buildProps({\n  /**\n   * @description type of Tab\n   */\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  /**\n   * @description whether Tab is closable\n   */\n  closable: Boolean,\n  /**\n   * @description whether Tab is addable\n   */\n  addable: Boolean,\n  /**\n   * @description binding value, name of the selected tab\n   */\n  modelValue: {\n    type: [String, Number],\n  },\n  /**\n   * @description whether Tab is addable and closable\n   */\n  editable: Boolean,\n  /**\n   * @description position of tabs\n   */\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  /**\n   * @description hook function before switching tab. If `false` is returned or a `Promise` is returned and then is rejected, switching will be prevented\n   */\n  beforeLeave: {\n    type: definePropType<\n      (newName: TabPaneName, oldName: TabPaneName) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  /**\n   * @description whether width of tab automatically fits its container\n   */\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nconst isPaneName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPaneName) => isPaneName(name),\n  tabClick: (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  tabChange: (name: TabPaneName) => isPaneName(name),\n  edit: (paneName: TabPaneName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  tabRemove: (name: TabPaneName) => isPaneName(name),\n  tabAdd: () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport type TabsPanes = Record<number, TabsPaneContext>\n\nconst Tabs = defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const ns = useNamespace('tabs')\n\n    const isVertical = computed(() =>\n      ['left', 'right'].includes(props.tabPosition)\n    )\n\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane,\n    } = useOrderedChildren<TabsPaneContext>(getCurrentInstance()!, 'ElTabPane')\n\n    const nav$ = ref<TabNavInstance>()\n    const currentName = ref<TabPaneName>(props.modelValue ?? '0')\n\n    const setCurrentName = async (value?: TabPaneName, trigger = false) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        const canLeave = await props.beforeLeave?.(value, currentName.value)\n        if (canLeave !== false) {\n          currentName.value = value\n          if (trigger) {\n            emit(UPDATE_MODEL_EVENT, value)\n            emit('tabChange', value)\n          }\n\n          nav$.value?.removeFocus?.()\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPaneName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName, true)\n      emit('tabClick', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tabRemove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tabAdd')\n    }\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane,\n    })\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const addSlot = slots['add-icon']\n      const newButton =\n        props.editable || props.addable ? (\n          <div\n            class={[\n              ns.e('new-tab'),\n              isVertical.value && ns.e('new-tab-vertical'),\n            ]}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (ev.code === EVENT_CODE.enter) handleTabAdd()\n            }}\n          >\n            {addSlot ? (\n              renderSlot(slots, 'add-icon')\n            ) : (\n              <ElIcon class={ns.is('icon-plus')}>\n                <Plus />\n              </ElIcon>\n            )}\n          </div>\n        ) : null\n\n      const header = (\n        <div\n          class={[\n            ns.e('header'),\n            isVertical.value && ns.e('header-vertical'),\n            ns.is(props.tabPosition),\n          ]}\n        >\n          <TabNav\n            ref={nav$}\n            currentName={currentName.value}\n            editable={props.editable}\n            type={props.type}\n            panes={panes.value}\n            stretch={props.stretch}\n            onTabClick={handleTabClick}\n            onTabRemove={handleTabRemove}\n          />\n          {newButton}\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n        >\n          {...props.tabPosition !== 'bottom'\n            ? [header, panels]\n            : [panels, header]}\n        </div>\n      )\n    }\n  },\n})\n\nexport type TabsInstance = InstanceType<typeof Tabs> & {\n  currentName: TabPaneName\n}\n\nexport default Tabs\n"],"names":["tabsProps","buildProps","type","values","default","closable","addable","modelValue","isString","isNumber","UPDATE_MODEL_EVENT","editable","defineComponent","tabPosition","useNamespace","computed","beforeLeave","definePropType","ref","stretch","Boolean","isUndefined","isPaneName","name","ev","tabChange","edit","tabRemove","tabAdd","Tabs","props","emits","expose","ns","children","addChild","removeChild","getCurrentInstance","nav$","currentName","watch","setCurrentName","value","canLeave","emit","_createVNode","handleTabClick","tabName","Plus","handleTabAdd","renderSlot","unregisterPane"],"mappings":"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"}