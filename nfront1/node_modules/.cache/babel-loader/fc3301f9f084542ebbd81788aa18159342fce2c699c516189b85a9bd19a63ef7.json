{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { isClient } from '@vueuse/core';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nconst messageTypes = [\"success\", \"info\", \"warning\", \"error\"];\nconst messageDefaults = mutable({\n  customClass: \"\",\n  center: false,\n  dangerouslyUseHTMLString: false,\n  duration: 3e3,\n  icon: void 0,\n  id: \"\",\n  message: \"\",\n  onClose: void 0,\n  showClose: false,\n  type: \"info\",\n  plain: false,\n  offset: 16,\n  zIndex: 0,\n  grouping: false,\n  repeatNum: 1,\n  appendTo: isClient ? document.body : void 0\n});\nconst messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: messageDefaults.customClass\n  },\n  center: {\n    type: Boolean,\n    default: messageDefaults.center\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: messageDefaults.dangerouslyUseHTMLString\n  },\n  duration: {\n    type: Number,\n    default: messageDefaults.duration\n  },\n  icon: {\n    type: iconPropType,\n    default: messageDefaults.icon\n  },\n  id: {\n    type: String,\n    default: messageDefaults.id\n  },\n  message: {\n    type: definePropType([String, Object, Function]),\n    default: messageDefaults.message\n  },\n  onClose: {\n    type: definePropType(Function),\n    default: messageDefaults.onClose\n  },\n  showClose: {\n    type: Boolean,\n    default: messageDefaults.showClose\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: messageDefaults.type\n  },\n  plain: {\n    type: Boolean,\n    default: messageDefaults.plain\n  },\n  offset: {\n    type: Number,\n    default: messageDefaults.offset\n  },\n  zIndex: {\n    type: Number,\n    default: messageDefaults.zIndex\n  },\n  grouping: {\n    type: Boolean,\n    default: messageDefaults.grouping\n  },\n  repeatNum: {\n    type: Number,\n    default: messageDefaults.repeatNum\n  }\n});\nconst messageEmits = {\n  destroy: () => true\n};\nexport { messageDefaults, messageEmits, messageProps, messageTypes };","map":{"version":3,"names":["messageTypes","messageDefaults","mutable","customClass","center","dangerouslyUseHTMLString","duration","icon","id","message","onClose","showClose","type","plain","offset","zIndex","grouping","repeatNum","appendTo","isClient","document","body","messageProps","buildProps","String","default","Boolean","Number","iconPropType","definePropType","Object","Function","values","messageEmits","destroy"],"sources":["../../../../../../packages/components/message/src/message.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isClient,\n  mutable,\n} from '@element-plus/utils'\nimport type { AppContext, ExtractPropTypes, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type MessageConstructor from './message.vue'\n\nexport const messageTypes = ['success', 'info', 'warning', 'error'] as const\n\nexport type messageType = typeof messageTypes[number]\n\nexport interface MessageConfigContext {\n  max?: number\n}\n\nexport const messageDefaults = mutable({\n  customClass: '',\n  center: false,\n  dangerouslyUseHTMLString: false,\n  duration: 3000,\n  icon: undefined,\n  id: '',\n  message: '',\n  onClose: undefined,\n  showClose: false,\n  type: 'info',\n  plain: false,\n  offset: 16,\n  zIndex: 0,\n  grouping: false,\n  repeatNum: 1,\n  appendTo: isClient ? document.body : (undefined as never),\n} as const)\n\nexport const messageProps = buildProps({\n  /**\n   * @description custom class name for Message\n   */\n  customClass: {\n    type: String,\n    default: messageDefaults.customClass,\n  },\n  /**\n   * @description whether to center the text\n   */\n  center: {\n    type: Boolean,\n    default: messageDefaults.center,\n  },\n  /**\n   * @description whether `message` is treated as HTML string\n   */\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: messageDefaults.dangerouslyUseHTMLString,\n  },\n  /**\n   * @description display duration, millisecond. If set to 0, it will not turn off automatically\n   */\n  duration: {\n    type: Number,\n    default: messageDefaults.duration,\n  },\n  /**\n   * @description custom icon component, overrides `type`\n   */\n  icon: {\n    type: iconPropType,\n    default: messageDefaults.icon,\n  },\n  /**\n   * @description message dom id\n   */\n  id: {\n    type: String,\n    default: messageDefaults.id,\n  },\n  /**\n   * @description message text\n   */\n  message: {\n    type: definePropType<string | VNode | (() => VNode)>([\n      String,\n      Object,\n      Function,\n    ]),\n    default: messageDefaults.message,\n  },\n  /**\n   * @description callback function when closed with the message instance as the parameter\n   */\n  onClose: {\n    type: definePropType<() => void>(Function),\n    default: messageDefaults.onClose,\n  },\n  /**\n   * @description whether to show a close button\n   */\n  showClose: {\n    type: Boolean,\n    default: messageDefaults.showClose,\n  },\n  /**\n   * @description message type\n   */\n  type: {\n    type: String,\n    values: messageTypes,\n    default: messageDefaults.type,\n  },\n  /**\n   * @description whether message is plain\n   */\n  plain: {\n    type: Boolean,\n    default: messageDefaults.plain,\n  },\n  /**\n   * @description set the distance to the top of viewport\n   */\n  offset: {\n    type: Number,\n    default: messageDefaults.offset,\n  },\n  /**\n   * @description input box size\n   */\n  zIndex: {\n    type: Number,\n    default: messageDefaults.zIndex,\n  },\n  /**\n   * @description merge messages with the same content, type of VNode message is not supported\n   */\n  grouping: {\n    type: Boolean,\n    default: messageDefaults.grouping,\n  },\n  /**\n   * @description The number of repetitions, similar to badge, is used as the initial number when used with `grouping`\n   */\n  repeatNum: {\n    type: Number,\n    default: messageDefaults.repeatNum,\n  },\n} as const)\nexport type MessageProps = ExtractPropTypes<typeof messageProps>\n\nexport const messageEmits = {\n  destroy: () => true,\n}\nexport type MessageEmits = typeof messageEmits\n\nexport type MessageInstance = InstanceType<typeof MessageConstructor>\n\nexport type MessageOptions = Partial<\n  Mutable<\n    Omit<MessageProps, 'id'> & {\n      appendTo?: HTMLElement | string\n    }\n  >\n>\nexport type MessageParams = MessageOptions | MessageOptions['message']\nexport type MessageParamsNormalized = Omit<MessageProps, 'id'> & {\n  /**\n   * @description set the root element for the message, default to `document.body`\n   */\n  appendTo: HTMLElement\n}\nexport type MessageOptionsWithType = Omit<MessageOptions, 'type'>\nexport type MessageParamsWithType =\n  | MessageOptionsWithType\n  | MessageOptions['message']\n\nexport interface MessageHandler {\n  /**\n   * @description close the Message\n   */\n  close: () => void\n}\n\nexport type MessageFn = {\n  (options?: MessageParams, appContext?: null | AppContext): MessageHandler\n  closeAll(type?: messageType): void\n}\nexport type MessageTypedFn = (\n  options?: MessageParamsWithType,\n  appContext?: null | AppContext\n) => MessageHandler\n\nexport interface Message extends MessageFn {\n  success: MessageTypedFn\n  warning: MessageTypedFn\n  info: MessageTypedFn\n  error: MessageTypedFn\n}\n"],"mappings":";;;;;AAOY,MAACA,YAAY,GAAG,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO;AACtD,MAACC,eAAe,GAAGC,OAAO,CAAC;EACrCC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE,KAAK;EACbC,wBAAwB,EAAE,KAAK;EAC/BC,QAAQ,EAAE,GAAG;EACbC,IAAI,EAAE,KAAK,CAAC;EACZC,EAAE,EAAE,EAAE;EACNC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK,CAAC;EACfC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAE,EAAE;EACVC,MAAM,EAAE,CAAC;EACTC,QAAQ,EAAE,KAAK;EACfC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAEC,QAAQ,GAAGC,QAAQ,CAACC,IAAI,GAAG,KAAK;AAC5C,CAAC;AACW,MAACC,YAAY,GAAGC,UAAU,CAAC;EACrCpB,WAAW,EAAE;IACXS,IAAI,EAAEY,MAAM;IACZC,OAAO,EAAExB,eAAe,CAACE;EAC7B,CAAG;EACDC,MAAM,EAAE;IACNQ,IAAI,EAAEc,OAAO;IACbD,OAAO,EAAExB,eAAe,CAACG;EAC7B,CAAG;EACDC,wBAAwB,EAAE;IACxBO,IAAI,EAAEc,OAAO;IACbD,OAAO,EAAExB,eAAe,CAACI;EAC7B,CAAG;EACDC,QAAQ,EAAE;IACRM,IAAI,EAAEe,MAAM;IACZF,OAAO,EAAExB,eAAe,CAACK;EAC7B,CAAG;EACDC,IAAI,EAAE;IACJK,IAAI,EAAEgB,YAAY;IAClBH,OAAO,EAAExB,eAAe,CAACM;EAC7B,CAAG;EACDC,EAAE,EAAE;IACFI,IAAI,EAAEY,MAAM;IACZC,OAAO,EAAExB,eAAe,CAACO;EAC7B,CAAG;EACDC,OAAO,EAAE;IACPG,IAAI,EAAEiB,cAAc,CAAC,CACnBL,MAAM,EACNM,MAAM,EACNC,QAAQ,CACT,CAAC;IACFN,OAAO,EAAExB,eAAe,CAACQ;EAC7B,CAAG;EACDC,OAAO,EAAE;IACPE,IAAI,EAAEiB,cAAc,CAACE,QAAQ,CAAC;IAC9BN,OAAO,EAAExB,eAAe,CAACS;EAC7B,CAAG;EACDC,SAAS,EAAE;IACTC,IAAI,EAAEc,OAAO;IACbD,OAAO,EAAExB,eAAe,CAACU;EAC7B,CAAG;EACDC,IAAI,EAAE;IACJA,IAAI,EAAEY,MAAM;IACZQ,MAAM,EAAEhC,YAAY;IACpByB,OAAO,EAAExB,eAAe,CAACW;EAC7B,CAAG;EACDC,KAAK,EAAE;IACLD,IAAI,EAAEc,OAAO;IACbD,OAAO,EAAExB,eAAe,CAACY;EAC7B,CAAG;EACDC,MAAM,EAAE;IACNF,IAAI,EAAEe,MAAM;IACZF,OAAO,EAAExB,eAAe,CAACa;EAC7B,CAAG;EACDC,MAAM,EAAE;IACNH,IAAI,EAAEe,MAAM;IACZF,OAAO,EAAExB,eAAe,CAACc;EAC7B,CAAG;EACDC,QAAQ,EAAE;IACRJ,IAAI,EAAEc,OAAO;IACbD,OAAO,EAAExB,eAAe,CAACe;EAC7B,CAAG;EACDC,SAAS,EAAE;IACTL,IAAI,EAAEe,MAAM;IACZF,OAAO,EAAExB,eAAe,CAACgB;EAC7B;AACA,CAAC;AACW,MAACgB,YAAY,GAAG;EAC1BC,OAAO,EAAEA,CAAA,KAAM;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}