{"ast":null,"code":"import { defineComponent, openBlock, createBlock, Transition, mergeProps, unref, toHandlers, withCtx, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst __default__ = defineComponent({\n  name: \"ElCollapseTransition\"\n});\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  ...__default__,\n  setup(__props) {\n    const ns = useNamespace(\"collapse-transition\");\n    const reset = el => {\n      el.style.maxHeight = \"\";\n      el.style.overflow = el.dataset.oldOverflow;\n      el.style.paddingTop = el.dataset.oldPaddingTop;\n      el.style.paddingBottom = el.dataset.oldPaddingBottom;\n    };\n    const on = {\n      beforeEnter(el) {\n        if (!el.dataset) el.dataset = {};\n        el.dataset.oldPaddingTop = el.style.paddingTop;\n        el.dataset.oldPaddingBottom = el.style.paddingBottom;\n        if (el.style.height) el.dataset.elExistsHeight = el.style.height;\n        el.style.maxHeight = 0;\n        el.style.paddingTop = 0;\n        el.style.paddingBottom = 0;\n      },\n      enter(el) {\n        requestAnimationFrame(() => {\n          el.dataset.oldOverflow = el.style.overflow;\n          if (el.dataset.elExistsHeight) {\n            el.style.maxHeight = el.dataset.elExistsHeight;\n          } else if (el.scrollHeight !== 0) {\n            el.style.maxHeight = `${el.scrollHeight}px`;\n          } else {\n            el.style.maxHeight = 0;\n          }\n          el.style.paddingTop = el.dataset.oldPaddingTop;\n          el.style.paddingBottom = el.dataset.oldPaddingBottom;\n          el.style.overflow = \"hidden\";\n        });\n      },\n      afterEnter(el) {\n        el.style.maxHeight = \"\";\n        el.style.overflow = el.dataset.oldOverflow;\n      },\n      enterCancelled(el) {\n        reset(el);\n      },\n      beforeLeave(el) {\n        if (!el.dataset) el.dataset = {};\n        el.dataset.oldPaddingTop = el.style.paddingTop;\n        el.dataset.oldPaddingBottom = el.style.paddingBottom;\n        el.dataset.oldOverflow = el.style.overflow;\n        el.style.maxHeight = `${el.scrollHeight}px`;\n        el.style.overflow = \"hidden\";\n      },\n      leave(el) {\n        if (el.scrollHeight !== 0) {\n          el.style.maxHeight = 0;\n          el.style.paddingTop = 0;\n          el.style.paddingBottom = 0;\n        }\n      },\n      afterLeave(el) {\n        reset(el);\n      },\n      leaveCancelled(el) {\n        reset(el);\n      }\n    };\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(Transition, mergeProps({\n        name: unref(ns).b()\n      }, toHandlers(on)), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16, [\"name\"]);\n    };\n  }\n});\nvar CollapseTransition = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"collapse-transition.vue\"]]);\nexport { CollapseTransition as default };","map":{"version":3,"names":["name","ns","useNamespace","reset","el","style","maxHeight","overflow","dataset","oldOverflow","paddingTop","oldPaddingTop","paddingBottom","oldPaddingBottom","on","beforeEnter","height","elExistsHeight","enter","requestAnimationFrame","scrollHeight","afterEnter","enterCancelled","beforeLeave","leave","afterLeave","leaveCancelled"],"sources":["../../../../../../packages/components/collapse-transition/src/collapse-transition.vue"],"sourcesContent":["<template>\n  <transition :name=\"ns.b()\" v-on=\"on\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\" setup>\nimport { useNamespace } from '@element-plus/hooks'\nimport type { RendererElement } from '@vue/runtime-core'\n\ndefineOptions({\n  name: 'ElCollapseTransition',\n})\n\nconst ns = useNamespace('collapse-transition')\n\nconst reset = (el: RendererElement) => {\n  el.style.maxHeight = ''\n  el.style.overflow = el.dataset.oldOverflow\n  el.style.paddingTop = el.dataset.oldPaddingTop\n  el.style.paddingBottom = el.dataset.oldPaddingBottom\n}\n\nconst on = {\n  beforeEnter(el: RendererElement) {\n    if (!el.dataset) el.dataset = {}\n\n    el.dataset.oldPaddingTop = el.style.paddingTop\n    el.dataset.oldPaddingBottom = el.style.paddingBottom\n    if (el.style.height) el.dataset.elExistsHeight = el.style.height\n\n    el.style.maxHeight = 0\n    el.style.paddingTop = 0\n    el.style.paddingBottom = 0\n  },\n\n  enter(el: RendererElement) {\n    requestAnimationFrame(() => {\n      el.dataset.oldOverflow = el.style.overflow\n      if (el.dataset.elExistsHeight) {\n        el.style.maxHeight = el.dataset.elExistsHeight\n      } else if (el.scrollHeight !== 0) {\n        el.style.maxHeight = `${el.scrollHeight}px`\n      } else {\n        el.style.maxHeight = 0\n      }\n\n      el.style.paddingTop = el.dataset.oldPaddingTop\n      el.style.paddingBottom = el.dataset.oldPaddingBottom\n      el.style.overflow = 'hidden'\n    })\n  },\n\n  afterEnter(el: RendererElement) {\n    el.style.maxHeight = ''\n    el.style.overflow = el.dataset.oldOverflow\n  },\n\n  enterCancelled(el: RendererElement) {\n    reset(el)\n  },\n\n  beforeLeave(el: RendererElement) {\n    if (!el.dataset) el.dataset = {}\n    el.dataset.oldPaddingTop = el.style.paddingTop\n    el.dataset.oldPaddingBottom = el.style.paddingBottom\n    el.dataset.oldOverflow = el.style.overflow\n\n    el.style.maxHeight = `${el.scrollHeight}px`\n    el.style.overflow = 'hidden'\n  },\n\n  leave(el: RendererElement) {\n    if (el.scrollHeight !== 0) {\n      el.style.maxHeight = 0\n      el.style.paddingTop = 0\n      el.style.paddingBottom = 0\n    }\n  },\n\n  afterLeave(el: RendererElement) {\n    reset(el)\n  },\n\n  leaveCancelled(el: RendererElement) {\n    reset(el)\n  },\n}\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}