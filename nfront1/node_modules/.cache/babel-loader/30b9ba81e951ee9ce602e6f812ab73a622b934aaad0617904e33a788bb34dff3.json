{"ast":null,"code":"import { defineComponent, getCurrentInstance, ref, watch, nextTick, provide, createVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Plus } from '@element-plus/icons-vue';\nimport '../../../hooks/index.mjs';\nimport { tabsRootContextKey } from './constants.mjs';\nimport TabNav from './tab-nav.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber, isUndefined } from '../../../utils/types.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useOrderedChildren } from '../../../hooks/use-ordered-children/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst tabsProps = buildProps({\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number]\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: [\"top\", \"right\", \"bottom\", \"left\"],\n    default: \"top\"\n  },\n  beforeLeave: {\n    type: definePropType(Function),\n    default: () => true\n  },\n  stretch: Boolean\n});\nconst isPaneName = value => isString(value) || isNumber(value);\nconst tabsEmits = {\n  [UPDATE_MODEL_EVENT]: name => isPaneName(name),\n  tabClick: (pane, ev) => ev instanceof Event,\n  tabChange: name => isPaneName(name),\n  edit: (paneName, action) => [\"remove\", \"add\"].includes(action),\n  tabRemove: name => isPaneName(name),\n  tabAdd: () => true\n};\nconst Tabs = defineComponent({\n  name: \"ElTabs\",\n  props: tabsProps,\n  emits: tabsEmits,\n  setup(props, {\n    emit,\n    slots,\n    expose\n  }) {\n    var _a;\n    const ns = useNamespace(\"tabs\");\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane\n    } = useOrderedChildren(getCurrentInstance(), \"ElTabPane\");\n    const nav$ = ref();\n    const currentName = ref((_a = props.modelValue) != null ? _a : \"0\");\n    const setCurrentName = async (value, trigger = false) => {\n      var _a2, _b, _c;\n      if (currentName.value === value || isUndefined(value)) return;\n      try {\n        const canLeave = await ((_a2 = props.beforeLeave) == null ? void 0 : _a2.call(props, value, currentName.value));\n        if (canLeave !== false) {\n          currentName.value = value;\n          if (trigger) {\n            emit(UPDATE_MODEL_EVENT, value);\n            emit(\"tabChange\", value);\n          }\n          (_c = (_b = nav$.value) == null ? void 0 : _b.removeFocus) == null ? void 0 : _c.call(_b);\n        }\n      } catch (e) {}\n    };\n    const handleTabClick = (tab, tabName, event) => {\n      if (tab.props.disabled) return;\n      setCurrentName(tabName, true);\n      emit(\"tabClick\", tab, event);\n    };\n    const handleTabRemove = (pane, ev) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return;\n      ev.stopPropagation();\n      emit(\"edit\", pane.props.name, \"remove\");\n      emit(\"tabRemove\", pane.props.name);\n    };\n    const handleTabAdd = () => {\n      emit(\"edit\", void 0, \"add\");\n      emit(\"tabAdd\");\n    };\n    watch(() => props.modelValue, modelValue => setCurrentName(modelValue));\n    watch(currentName, async () => {\n      var _a2;\n      await nextTick();\n      (_a2 = nav$.value) == null ? void 0 : _a2.scrollToActiveTab();\n    });\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane\n    });\n    expose({\n      currentName\n    });\n    return () => {\n      const addSlot = slots[\"add-icon\"];\n      const newButton = props.editable || props.addable ? createVNode(\"span\", {\n        \"class\": ns.e(\"new-tab\"),\n        \"tabindex\": \"0\",\n        \"onClick\": handleTabAdd,\n        \"onKeydown\": ev => {\n          if (ev.code === EVENT_CODE.enter) handleTabAdd();\n        }\n      }, [addSlot ? renderSlot(slots, \"add-icon\") : createVNode(ElIcon, {\n        \"class\": ns.is(\"icon-plus\")\n      }, {\n        default: () => [createVNode(Plus, null, null)]\n      })]) : null;\n      const header = createVNode(\"div\", {\n        \"class\": [ns.e(\"header\"), ns.is(props.tabPosition)]\n      }, [newButton, createVNode(TabNav, {\n        \"ref\": nav$,\n        \"currentName\": currentName.value,\n        \"editable\": props.editable,\n        \"type\": props.type,\n        \"panes\": panes.value,\n        \"stretch\": props.stretch,\n        \"onTabClick\": handleTabClick,\n        \"onTabRemove\": handleTabRemove\n      }, null)]);\n      const panels = createVNode(\"div\", {\n        \"class\": ns.e(\"content\")\n      }, [renderSlot(slots, \"default\")]);\n      return createVNode(\"div\", {\n        \"class\": [ns.b(), ns.m(props.tabPosition), {\n          [ns.m(\"card\")]: props.type === \"card\",\n          [ns.m(\"border-card\")]: props.type === \"border-card\"\n        }]\n      }, [...(props.tabPosition !== \"bottom\" ? [header, panels] : [panels, header])]);\n    };\n  }\n});\nexport { Tabs as default, tabsEmits, tabsProps };","map":{"version":3,"names":["tabsProps","buildProps","type","String","values","default","closable","Boolean","addable","modelValue","Number","editable","tabPosition","beforeLeave","definePropType","Function","stretch","tabsEmits","tabClick","pane","ev","Event","tabChange","name","isPaneName","edit","paneName","action","includes","tabRemove","tabAdd","Tabs","defineComponent","props","emits","setup","emit","expose","_a","ns","useNamespace","children","panes","addChild","registerPane","removeChild","unregisterPane","useOrderedChildren","getCurrentInstance","nav$","ref","currentName","setCurrentName","value","trigger","_a2","_b","_c","canLeave","call","e","tab","disabled","tabName","event","handleTabRemove","isUndefined","stopPropagation","handleTabAdd","watch","nextTick","scrollToActiveTab","addSlot","slots","newButton","createVNode","code","EVENT_CODE","enter","renderSlot","ElIcon","is","Plus","header","TabNav","handleTabClick","panels","b","m"],"sources":["../../../../../../packages/components/tabs/src/tabs.tsx"],"sourcesContent":["import {\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  provide,\n  ref,\n  renderSlot,\n  watch,\n} from 'vue'\nimport {\n  buildProps,\n  definePropType,\n  isNumber,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { EVENT_CODE, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElIcon from '@element-plus/components/icon'\nimport { Plus } from '@element-plus/icons-vue'\nimport { useNamespace, useOrderedChildren } from '@element-plus/hooks'\nimport { tabsRootContextKey } from './constants'\nimport TabNav from './tab-nav'\n\nimport type { TabNavInstance } from './tab-nav'\nimport type { TabsPaneContext } from './constants'\nimport type { ExtractPropTypes } from 'vue'\nimport type { Awaitable } from '@element-plus/utils'\n\nexport type TabPaneName = string | number\n\nexport const tabsProps = buildProps({\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  closable: Boolean,\n  addable: Boolean,\n  modelValue: {\n    type: [String, Number],\n  },\n  editable: Boolean,\n  tabPosition: {\n    type: String,\n    values: ['top', 'right', 'bottom', 'left'],\n    default: 'top',\n  },\n  beforeLeave: {\n    type: definePropType<\n      (newName: TabPaneName, oldName: TabPaneName) => Awaitable<void | boolean>\n    >(Function),\n    default: () => true,\n  },\n  stretch: Boolean,\n} as const)\nexport type TabsProps = ExtractPropTypes<typeof tabsProps>\n\nconst isPaneName = (value: unknown): value is string | number =>\n  isString(value) || isNumber(value)\n\nexport const tabsEmits = {\n  [UPDATE_MODEL_EVENT]: (name: TabPaneName) => isPaneName(name),\n  tabClick: (pane: TabsPaneContext, ev: Event) => ev instanceof Event,\n  tabChange: (name: TabPaneName) => isPaneName(name),\n  edit: (paneName: TabPaneName | undefined, action: 'remove' | 'add') =>\n    ['remove', 'add'].includes(action),\n  tabRemove: (name: TabPaneName) => isPaneName(name),\n  tabAdd: () => true,\n}\nexport type TabsEmits = typeof tabsEmits\n\nexport type TabsPanes = Record<number, TabsPaneContext>\n\nconst Tabs = defineComponent({\n  name: 'ElTabs',\n\n  props: tabsProps,\n  emits: tabsEmits,\n\n  setup(props, { emit, slots, expose }) {\n    const ns = useNamespace('tabs')\n\n    const {\n      children: panes,\n      addChild: registerPane,\n      removeChild: unregisterPane,\n    } = useOrderedChildren<TabsPaneContext>(getCurrentInstance()!, 'ElTabPane')\n\n    const nav$ = ref<TabNavInstance>()\n    const currentName = ref<TabPaneName>(props.modelValue ?? '0')\n\n    const setCurrentName = async (value?: TabPaneName, trigger = false) => {\n      // should do nothing.\n      if (currentName.value === value || isUndefined(value)) return\n\n      try {\n        const canLeave = await props.beforeLeave?.(value, currentName.value)\n        if (canLeave !== false) {\n          currentName.value = value\n          if (trigger) {\n            emit(UPDATE_MODEL_EVENT, value)\n            emit('tabChange', value)\n          }\n\n          nav$.value?.removeFocus?.()\n        }\n      } catch {}\n    }\n\n    const handleTabClick = (\n      tab: TabsPaneContext,\n      tabName: TabPaneName,\n      event: Event\n    ) => {\n      if (tab.props.disabled) return\n      setCurrentName(tabName, true)\n      emit('tabClick', tab, event)\n    }\n\n    const handleTabRemove = (pane: TabsPaneContext, ev: Event) => {\n      if (pane.props.disabled || isUndefined(pane.props.name)) return\n      ev.stopPropagation()\n      emit('edit', pane.props.name, 'remove')\n      emit('tabRemove', pane.props.name)\n    }\n\n    const handleTabAdd = () => {\n      emit('edit', undefined, 'add')\n      emit('tabAdd')\n    }\n\n    watch(\n      () => props.modelValue,\n      (modelValue) => setCurrentName(modelValue)\n    )\n\n    watch(currentName, async () => {\n      await nextTick()\n      nav$.value?.scrollToActiveTab()\n    })\n\n    provide(tabsRootContextKey, {\n      props,\n      currentName,\n      registerPane,\n      unregisterPane,\n    })\n\n    expose({\n      currentName,\n    })\n\n    return () => {\n      const addSlot = slots['add-icon']\n      const newButton =\n        props.editable || props.addable ? (\n          <span\n            class={ns.e('new-tab')}\n            tabindex=\"0\"\n            onClick={handleTabAdd}\n            onKeydown={(ev: KeyboardEvent) => {\n              if (ev.code === EVENT_CODE.enter) handleTabAdd()\n            }}\n          >\n            {addSlot ? (\n              renderSlot(slots, 'add-icon')\n            ) : (\n              <ElIcon class={ns.is('icon-plus')}>\n                <Plus />\n              </ElIcon>\n            )}\n          </span>\n        ) : null\n\n      const header = (\n        <div class={[ns.e('header'), ns.is(props.tabPosition)]}>\n          {newButton}\n          <TabNav\n            ref={nav$}\n            currentName={currentName.value}\n            editable={props.editable}\n            type={props.type}\n            panes={panes.value}\n            stretch={props.stretch}\n            onTabClick={handleTabClick}\n            onTabRemove={handleTabRemove}\n          />\n        </div>\n      )\n\n      const panels = (\n        <div class={ns.e('content')}>{renderSlot(slots, 'default')}</div>\n      )\n\n      return (\n        <div\n          class={[\n            ns.b(),\n            ns.m(props.tabPosition),\n            {\n              [ns.m('card')]: props.type === 'card',\n              [ns.m('border-card')]: props.type === 'border-card',\n            },\n          ]}\n        >\n          {...props.tabPosition !== 'bottom'\n            ? [header, panels]\n            : [panels, header]}\n        </div>\n      )\n    }\n  },\n})\n\nexport type TabsInstance = InstanceType<typeof Tabs> & {\n  currentName: TabPaneName\n}\n\nexport default Tabs\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}