{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createVNode, render } from 'vue';\nimport { get, flatMap } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { isObject, hasOwn, isArray } from '@vue/shared';\nimport { throwError } from '../../../utils/error.mjs';\nimport { isBoolean } from '../../../utils/types.mjs';\nconst getCell = function (event) {\n  var _a;\n  return (_a = event.target) == null ? void 0 : _a.closest(\"td\");\n};\nconst orderBy = function (array, sortKey, reverse, sortMethod, sortBy) {\n  if (!sortKey && !sortMethod && (!sortBy || Array.isArray(sortBy) && !sortBy.length)) {\n    return array;\n  }\n  if (typeof reverse === \"string\") {\n    reverse = reverse === \"descending\" ? -1 : 1;\n  } else {\n    reverse = reverse && reverse < 0 ? -1 : 1;\n  }\n  const getKey = sortMethod ? null : function (value, index) {\n    if (sortBy) {\n      if (!Array.isArray(sortBy)) {\n        sortBy = [sortBy];\n      }\n      return sortBy.map(by => {\n        if (typeof by === \"string\") {\n          return get(value, by);\n        } else {\n          return by(value, index, array);\n        }\n      });\n    }\n    if (sortKey !== \"$key\") {\n      if (isObject(value) && \"$value\" in value) value = value.$value;\n    }\n    return [isObject(value) ? get(value, sortKey) : value];\n  };\n  const compare = function (a, b) {\n    if (sortMethod) {\n      return sortMethod(a.value, b.value);\n    }\n    for (let i = 0, len = a.key.length; i < len; i++) {\n      if (a.key[i] < b.key[i]) {\n        return -1;\n      }\n      if (a.key[i] > b.key[i]) {\n        return 1;\n      }\n    }\n    return 0;\n  };\n  return array.map((value, index) => {\n    return {\n      value,\n      index,\n      key: getKey ? getKey(value, index) : null\n    };\n  }).sort((a, b) => {\n    let order = compare(a, b);\n    if (!order) {\n      order = a.index - b.index;\n    }\n    return order * +reverse;\n  }).map(item => item.value);\n};\nconst getColumnById = function (table, columnId) {\n  let column = null;\n  table.columns.forEach(item => {\n    if (item.id === columnId) {\n      column = item;\n    }\n  });\n  return column;\n};\nconst getColumnByKey = function (table, columnKey) {\n  let column = null;\n  for (let i = 0; i < table.columns.length; i++) {\n    const item = table.columns[i];\n    if (item.columnKey === columnKey) {\n      column = item;\n      break;\n    }\n  }\n  if (!column) throwError(\"ElTable\", `No column matching with column-key: ${columnKey}`);\n  return column;\n};\nconst getColumnByCell = function (table, cell, namespace) {\n  const matches = (cell.className || \"\").match(new RegExp(`${namespace}-table_[^\\\\s]+`, \"gm\"));\n  if (matches) {\n    return getColumnById(table, matches[0]);\n  }\n  return null;\n};\nconst getRowIdentity = (row, rowKey) => {\n  if (!row) throw new Error(\"Row is required when get row identity\");\n  if (typeof rowKey === \"string\") {\n    if (!rowKey.includes(\".\")) {\n      return `${row[rowKey]}`;\n    }\n    const key = rowKey.split(\".\");\n    let current = row;\n    for (const element of key) {\n      current = current[element];\n    }\n    return `${current}`;\n  } else if (typeof rowKey === \"function\") {\n    return rowKey.call(null, row);\n  }\n};\nconst getKeysMap = function (array, rowKey) {\n  const arrayMap = {};\n  (array || []).forEach((row, index) => {\n    arrayMap[getRowIdentity(row, rowKey)] = {\n      row,\n      index\n    };\n  });\n  return arrayMap;\n};\nfunction mergeOptions(defaults, config) {\n  const options = {};\n  let key;\n  for (key in defaults) {\n    options[key] = defaults[key];\n  }\n  for (key in config) {\n    if (hasOwn(config, key)) {\n      const value = config[key];\n      if (typeof value !== \"undefined\") {\n        options[key] = value;\n      }\n    }\n  }\n  return options;\n}\nfunction parseWidth(width) {\n  if (width === \"\") return width;\n  if (width !== void 0) {\n    width = Number.parseInt(width, 10);\n    if (Number.isNaN(width)) {\n      width = \"\";\n    }\n  }\n  return width;\n}\nfunction parseMinWidth(minWidth) {\n  if (minWidth === \"\") return minWidth;\n  if (minWidth !== void 0) {\n    minWidth = parseWidth(minWidth);\n    if (Number.isNaN(minWidth)) {\n      minWidth = 80;\n    }\n  }\n  return minWidth;\n}\nfunction parseHeight(height) {\n  if (typeof height === \"number\") {\n    return height;\n  }\n  if (typeof height === \"string\") {\n    if (/^\\d+(?:px)?$/.test(height)) {\n      return Number.parseInt(height, 10);\n    } else {\n      return height;\n    }\n  }\n  return null;\n}\nfunction compose(...funcs) {\n  if (funcs.length === 0) {\n    return arg => arg;\n  }\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n  return funcs.reduce((a, b) => (...args) => a(b(...args)));\n}\nfunction toggleRowStatus(statusArr, row, newVal) {\n  let changed = false;\n  const index = statusArr.indexOf(row);\n  const included = index !== -1;\n  const toggleStatus = type => {\n    if (type === \"add\") {\n      statusArr.push(row);\n    } else {\n      statusArr.splice(index, 1);\n    }\n    changed = true;\n    if (isArray(row.children)) {\n      row.children.forEach(item => {\n        toggleRowStatus(statusArr, item, newVal != null ? newVal : !included);\n      });\n    }\n  };\n  if (isBoolean(newVal)) {\n    if (newVal && !included) {\n      toggleStatus(\"add\");\n    } else if (!newVal && included) {\n      toggleStatus(\"remove\");\n    }\n  } else {\n    included ? toggleStatus(\"remove\") : toggleStatus(\"add\");\n  }\n  return changed;\n}\nfunction walkTreeNode(root, cb, childrenKey = \"children\", lazyKey = \"hasChildren\") {\n  const isNil = array => !(Array.isArray(array) && array.length);\n  function _walker(parent, children, level) {\n    cb(parent, children, level);\n    children.forEach(item => {\n      if (item[lazyKey]) {\n        cb(item, null, level + 1);\n        return;\n      }\n      const children2 = item[childrenKey];\n      if (!isNil(children2)) {\n        _walker(item, children2, level + 1);\n      }\n    });\n  }\n  root.forEach(item => {\n    if (item[lazyKey]) {\n      cb(item, null, 0);\n      return;\n    }\n    const children = item[childrenKey];\n    if (!isNil(children)) {\n      _walker(item, children, 0);\n    }\n  });\n}\nlet removePopper = null;\nfunction createTablePopper(props, popperContent, trigger, table) {\n  if ((removePopper == null ? void 0 : removePopper.trigger) === trigger) {\n    return;\n  }\n  removePopper == null ? void 0 : removePopper();\n  const parentNode = table == null ? void 0 : table.refs.tableWrapper;\n  const ns = parentNode == null ? void 0 : parentNode.dataset.prefix;\n  const popperOptions = {\n    strategy: \"fixed\",\n    ...props.popperOptions\n  };\n  const vm = createVNode(ElTooltip, {\n    content: popperContent,\n    virtualTriggering: true,\n    virtualRef: trigger,\n    appendTo: parentNode,\n    placement: \"top\",\n    transition: \"none\",\n    offset: 0,\n    hideAfter: 0,\n    ...props,\n    popperOptions,\n    onHide: () => {\n      removePopper == null ? void 0 : removePopper();\n    }\n  });\n  vm.appContext = {\n    ...table.appContext,\n    ...table\n  };\n  const container = document.createElement(\"div\");\n  render(vm, container);\n  vm.component.exposed.onOpen();\n  const scrollContainer = parentNode == null ? void 0 : parentNode.querySelector(`.${ns}-scrollbar__wrap`);\n  removePopper = () => {\n    render(null, container);\n    scrollContainer == null ? void 0 : scrollContainer.removeEventListener(\"scroll\", removePopper);\n    removePopper = null;\n  };\n  removePopper.trigger = trigger;\n  scrollContainer == null ? void 0 : scrollContainer.addEventListener(\"scroll\", removePopper);\n}\nfunction getCurrentColumns(column) {\n  if (column.children) {\n    return flatMap(column.children, getCurrentColumns);\n  } else {\n    return [column];\n  }\n}\nfunction getColSpan(colSpan, column) {\n  return colSpan + column.colSpan;\n}\nconst isFixedColumn = (index, fixed, store, realColumns) => {\n  let start = 0;\n  let after = index;\n  const columns = store.states.columns.value;\n  if (realColumns) {\n    const curColumns = getCurrentColumns(realColumns[index]);\n    const preColumns = columns.slice(0, columns.indexOf(curColumns[0]));\n    start = preColumns.reduce(getColSpan, 0);\n    after = start + curColumns.reduce(getColSpan, 0) - 1;\n  } else {\n    start = index;\n  }\n  let fixedLayout;\n  switch (fixed) {\n    case \"left\":\n      if (after < store.states.fixedLeafColumnsLength.value) {\n        fixedLayout = \"left\";\n      }\n      break;\n    case \"right\":\n      if (start >= columns.length - store.states.rightFixedLeafColumnsLength.value) {\n        fixedLayout = \"right\";\n      }\n      break;\n    default:\n      if (after < store.states.fixedLeafColumnsLength.value) {\n        fixedLayout = \"left\";\n      } else if (start >= columns.length - store.states.rightFixedLeafColumnsLength.value) {\n        fixedLayout = \"right\";\n      }\n  }\n  return fixedLayout ? {\n    direction: fixedLayout,\n    start,\n    after\n  } : {};\n};\nconst getFixedColumnsClass = (namespace, index, fixed, store, realColumns, offset = 0) => {\n  const classes = [];\n  const {\n    direction,\n    start,\n    after\n  } = isFixedColumn(index, fixed, store, realColumns);\n  if (direction) {\n    const isLeft = direction === \"left\";\n    classes.push(`${namespace}-fixed-column--${direction}`);\n    if (isLeft && after + offset === store.states.fixedLeafColumnsLength.value - 1) {\n      classes.push(\"is-last-column\");\n    } else if (!isLeft && start - offset === store.states.columns.value.length - store.states.rightFixedLeafColumnsLength.value) {\n      classes.push(\"is-first-column\");\n    }\n  }\n  return classes;\n};\nfunction getOffset(offset, column) {\n  return offset + (column.realWidth === null || Number.isNaN(column.realWidth) ? Number(column.width) : column.realWidth);\n}\nconst getFixedColumnOffset = (index, fixed, store, realColumns) => {\n  const {\n    direction,\n    start = 0,\n    after = 0\n  } = isFixedColumn(index, fixed, store, realColumns);\n  if (!direction) {\n    return;\n  }\n  const styles = {};\n  const isLeft = direction === \"left\";\n  const columns = store.states.columns.value;\n  if (isLeft) {\n    styles.left = columns.slice(0, start).reduce(getOffset, 0);\n  } else {\n    styles.right = columns.slice(after + 1).reverse().reduce(getOffset, 0);\n  }\n  return styles;\n};\nconst ensurePosition = (style, key) => {\n  if (!style) return;\n  if (!Number.isNaN(style[key])) {\n    style[key] = `${style[key]}px`;\n  }\n};\nexport { compose, createTablePopper, ensurePosition, getCell, getColumnByCell, getColumnById, getColumnByKey, getFixedColumnOffset, getFixedColumnsClass, getKeysMap, getRowIdentity, isFixedColumn, mergeOptions, orderBy, parseHeight, parseMinWidth, parseWidth, removePopper, toggleRowStatus, walkTreeNode };","map":{"version":3,"names":["getCell","event","_a","target","closest","orderBy","array","sortKey","reverse","sortMethod","sortBy","Array","isArray","length","getKey","value","index","map","by","get","isObject","$value","compare","a","b","i","len","key","sort","order","item","getColumnById","table","columnId","column","columns","forEach","id","getColumnByKey","columnKey","throwError","getColumnByCell","cell","namespace","matches","className","match","RegExp","getRowIdentity","row","rowKey","Error","includes","split","current","element","call","getKeysMap","arrayMap","mergeOptions","defaults","config","options","hasOwn","parseWidth","width","Number","parseInt","isNaN","parseMinWidth","minWidth","parseHeight","height","test","compose","funcs","arg","reduce","args","toggleRowStatus","statusArr","newVal","changed","indexOf","included","toggleStatus","type","push","splice","children","isBoolean","walkTreeNode","root","cb","childrenKey","lazyKey","isNil","_walker","parent","level","children2","removePopper","createTablePopper","props","popperContent","trigger","parentNode","refs","tableWrapper","ns","dataset","prefix","popperOptions","strategy","vm","createVNode","ElTooltip","content","virtualTriggering","virtualRef","appendTo","placement","transition","offset","hideAfter","onHide","appContext","container","document","createElement","render","component","exposed","onOpen","scrollContainer","querySelector","removeEventListener","addEventListener","getCurrentColumns","flatMap","getColSpan","colSpan","isFixedColumn","fixed","store","realColumns","start","after","states","curColumns","preColumns","slice","fixedLayout","fixedLeafColumnsLength","rightFixedLeafColumnsLength","direction","getFixedColumnsClass","classes","isLeft","getOffset","realWidth","getFixedColumnOffset","styles","left","right","ensurePosition","style"],"sources":["../../../../../../packages/components/table/src/util.ts"],"sourcesContent":["// @ts-nocheck\nimport { createVNode, render } from 'vue'\nimport { flatMap, get } from 'lodash-unified'\nimport {\n  hasOwn,\n  isArray,\n  isBoolean,\n  isObject,\n  throwError,\n} from '@element-plus/utils'\nimport ElTooltip, {\n  type ElTooltipProps,\n} from '@element-plus/components/tooltip'\nimport type { Table } from './table/defaults'\nimport type { TableColumnCtx } from './table-column/defaults'\n\nexport type TableOverflowTooltipOptions = Partial<\n  Pick<\n    ElTooltipProps,\n    | 'appendTo'\n    | 'effect'\n    | 'enterable'\n    | 'hideAfter'\n    | 'offset'\n    | 'placement'\n    | 'popperClass'\n    | 'popperOptions'\n    | 'showAfter'\n    | 'showArrow'\n    | 'transition'\n  >\n>\n\ntype RemovePopperFn = (() => void) & {\n  trigger?: HTMLElement\n}\n\nexport const getCell = function (event: Event) {\n  return (event.target as HTMLElement)?.closest('td')\n}\n\nexport const orderBy = function <T>(\n  array: T[],\n  sortKey: string,\n  reverse: string | number,\n  sortMethod,\n  sortBy: string | (string | ((a: T, b: T, array?: T[]) => number))[]\n) {\n  if (\n    !sortKey &&\n    !sortMethod &&\n    (!sortBy || (Array.isArray(sortBy) && !sortBy.length))\n  ) {\n    return array\n  }\n  if (typeof reverse === 'string') {\n    reverse = reverse === 'descending' ? -1 : 1\n  } else {\n    reverse = reverse && reverse < 0 ? -1 : 1\n  }\n  const getKey = sortMethod\n    ? null\n    : function (value, index) {\n        if (sortBy) {\n          if (!Array.isArray(sortBy)) {\n            sortBy = [sortBy]\n          }\n          return sortBy.map((by) => {\n            if (typeof by === 'string') {\n              return get(value, by)\n            } else {\n              return by(value, index, array)\n            }\n          })\n        }\n        if (sortKey !== '$key') {\n          if (isObject(value) && '$value' in value) value = value.$value\n        }\n        return [isObject(value) ? get(value, sortKey) : value]\n      }\n  const compare = function (a, b) {\n    if (sortMethod) {\n      return sortMethod(a.value, b.value)\n    }\n    for (let i = 0, len = a.key.length; i < len; i++) {\n      if (a.key[i] < b.key[i]) {\n        return -1\n      }\n      if (a.key[i] > b.key[i]) {\n        return 1\n      }\n    }\n    return 0\n  }\n  return array\n    .map((value, index) => {\n      return {\n        value,\n        index,\n        key: getKey ? getKey(value, index) : null,\n      }\n    })\n    .sort((a, b) => {\n      let order = compare(a, b)\n      if (!order) {\n        // make stable https://en.wikipedia.org/wiki/Sorting_algorithm#Stability\n        order = a.index - b.index\n      }\n      return order * +reverse\n    })\n    .map((item) => item.value)\n}\n\nexport const getColumnById = function <T>(\n  table: {\n    columns: TableColumnCtx<T>[]\n  },\n  columnId: string\n): null | TableColumnCtx<T> {\n  let column = null\n  table.columns.forEach((item) => {\n    if (item.id === columnId) {\n      column = item\n    }\n  })\n  return column\n}\n\nexport const getColumnByKey = function <T>(\n  table: {\n    columns: TableColumnCtx<T>[]\n  },\n  columnKey: string\n): TableColumnCtx<T> {\n  let column = null\n  for (let i = 0; i < table.columns.length; i++) {\n    const item = table.columns[i]\n    if (item.columnKey === columnKey) {\n      column = item\n      break\n    }\n  }\n  if (!column)\n    throwError('ElTable', `No column matching with column-key: ${columnKey}`)\n  return column\n}\n\nexport const getColumnByCell = function <T>(\n  table: {\n    columns: TableColumnCtx<T>[]\n  },\n  cell: HTMLElement,\n  namespace: string\n): null | TableColumnCtx<T> {\n  const matches = (cell.className || '').match(\n    new RegExp(`${namespace}-table_[^\\\\s]+`, 'gm')\n  )\n  if (matches) {\n    return getColumnById(table, matches[0])\n  }\n  return null\n}\n\nexport const getRowIdentity = <T>(\n  row: T,\n  rowKey: string | ((row: T) => any)\n): string => {\n  if (!row) throw new Error('Row is required when get row identity')\n  if (typeof rowKey === 'string') {\n    if (!rowKey.includes('.')) {\n      return `${row[rowKey]}`\n    }\n    const key = rowKey.split('.')\n    let current = row\n    for (const element of key) {\n      current = current[element]\n    }\n    return `${current}`\n  } else if (typeof rowKey === 'function') {\n    return rowKey.call(null, row)\n  }\n}\n\nexport const getKeysMap = function <T>(\n  array: T[],\n  rowKey: string\n): Record<string, { row: T; index: number }> {\n  const arrayMap = {}\n  ;(array || []).forEach((row, index) => {\n    arrayMap[getRowIdentity(row, rowKey)] = { row, index }\n  })\n  return arrayMap\n}\n\nexport function mergeOptions<T, K>(defaults: T, config: K): T & K {\n  const options = {} as T & K\n  let key\n  for (key in defaults) {\n    options[key] = defaults[key]\n  }\n  for (key in config) {\n    if (hasOwn(config as unknown as Record<string, any>, key)) {\n      const value = config[key]\n      if (typeof value !== 'undefined') {\n        options[key] = value\n      }\n    }\n  }\n  return options\n}\n\nexport function parseWidth(width: number | string): number | string {\n  if (width === '') return width\n  if (width !== undefined) {\n    width = Number.parseInt(width as string, 10)\n    if (Number.isNaN(width)) {\n      width = ''\n    }\n  }\n  return width\n}\n\nexport function parseMinWidth(minWidth: number | string): number | string {\n  if (minWidth === '') return minWidth\n  if (minWidth !== undefined) {\n    minWidth = parseWidth(minWidth)\n    if (Number.isNaN(minWidth)) {\n      minWidth = 80\n    }\n  }\n  return minWidth\n}\n\nexport function parseHeight(height: number | string) {\n  if (typeof height === 'number') {\n    return height\n  }\n  if (typeof height === 'string') {\n    if (/^\\d+(?:px)?$/.test(height)) {\n      return Number.parseInt(height, 10)\n    } else {\n      return height\n    }\n  }\n  return null\n}\n\n// https://github.com/reduxjs/redux/blob/master/src/compose.js\nexport function compose(...funcs) {\n  if (funcs.length === 0) {\n    return (arg) => arg\n  }\n  if (funcs.length === 1) {\n    return funcs[0]\n  }\n  return funcs.reduce(\n    (a, b) =>\n      (...args) =>\n        a(b(...args))\n  )\n}\n\nexport function toggleRowStatus<T>(\n  statusArr: T[],\n  row: T,\n  newVal: boolean\n): boolean {\n  let changed = false\n  const index = statusArr.indexOf(row)\n  const included = index !== -1\n\n  const toggleStatus = (type: 'add' | 'remove') => {\n    if (type === 'add') {\n      statusArr.push(row)\n    } else {\n      statusArr.splice(index, 1)\n    }\n    changed = true\n    if (isArray(row.children)) {\n      row.children.forEach((item) => {\n        toggleRowStatus(statusArr, item, newVal ?? !included)\n      })\n    }\n  }\n\n  if (isBoolean(newVal)) {\n    if (newVal && !included) {\n      toggleStatus('add')\n    } else if (!newVal && included) {\n      toggleStatus('remove')\n    }\n  } else {\n    included ? toggleStatus('remove') : toggleStatus('add')\n  }\n  return changed\n}\n\nexport function walkTreeNode(\n  root,\n  cb,\n  childrenKey = 'children',\n  lazyKey = 'hasChildren'\n) {\n  const isNil = (array) => !(Array.isArray(array) && array.length)\n\n  function _walker(parent, children, level) {\n    cb(parent, children, level)\n    children.forEach((item) => {\n      if (item[lazyKey]) {\n        cb(item, null, level + 1)\n        return\n      }\n      const children = item[childrenKey]\n      if (!isNil(children)) {\n        _walker(item, children, level + 1)\n      }\n    })\n  }\n\n  root.forEach((item) => {\n    if (item[lazyKey]) {\n      cb(item, null, 0)\n      return\n    }\n    const children = item[childrenKey]\n    if (!isNil(children)) {\n      _walker(item, children, 0)\n    }\n  })\n}\n\nexport let removePopper: RemovePopperFn | null = null\n\nexport function createTablePopper(\n  props: TableOverflowTooltipOptions,\n  popperContent: string,\n  trigger: HTMLElement,\n  table: Table<[]>\n) {\n  if (removePopper?.trigger === trigger) {\n    return\n  }\n  removePopper?.()\n  const parentNode = table?.refs.tableWrapper\n  const ns = parentNode?.dataset.prefix\n  const popperOptions = {\n    strategy: 'fixed',\n    ...props.popperOptions,\n  }\n  const vm = createVNode(ElTooltip, {\n    content: popperContent,\n    virtualTriggering: true,\n    virtualRef: trigger,\n    appendTo: parentNode,\n    placement: 'top',\n    transition: 'none', // Default does not require transition\n    offset: 0,\n    hideAfter: 0,\n    ...props,\n    popperOptions,\n    onHide: () => {\n      removePopper?.()\n    },\n  })\n  vm.appContext = { ...table.appContext, ...table }\n  const container = document.createElement('div')\n  render(vm, container)\n  vm.component!.exposed!.onOpen()\n  const scrollContainer = parentNode?.querySelector(`.${ns}-scrollbar__wrap`)\n  removePopper = () => {\n    render(null, container)\n    scrollContainer?.removeEventListener('scroll', removePopper!)\n    removePopper = null\n  }\n  removePopper.trigger = trigger\n  scrollContainer?.addEventListener('scroll', removePopper)\n}\n\nfunction getCurrentColumns<T>(column: TableColumnCtx<T>): TableColumnCtx<T>[] {\n  if (column.children) {\n    return flatMap(column.children, getCurrentColumns)\n  } else {\n    return [column]\n  }\n}\n\nfunction getColSpan<T>(colSpan: number, column: TableColumnCtx<T>) {\n  return colSpan + column.colSpan\n}\n\nexport const isFixedColumn = <T>(\n  index: number,\n  fixed: string | boolean,\n  store: any,\n  realColumns?: TableColumnCtx<T>[]\n) => {\n  let start = 0\n  let after = index\n  const columns = store.states.columns.value\n  if (realColumns) {\n    // fixed column supported in grouped header\n    const curColumns = getCurrentColumns(realColumns[index])\n    const preColumns = columns.slice(0, columns.indexOf(curColumns[0]))\n\n    start = preColumns.reduce(getColSpan, 0)\n    after = start + curColumns.reduce(getColSpan, 0) - 1\n  } else {\n    start = index\n  }\n  let fixedLayout\n  switch (fixed) {\n    case 'left':\n      if (after < store.states.fixedLeafColumnsLength.value) {\n        fixedLayout = 'left'\n      }\n      break\n    case 'right':\n      if (\n        start >=\n        columns.length - store.states.rightFixedLeafColumnsLength.value\n      ) {\n        fixedLayout = 'right'\n      }\n      break\n    default:\n      if (after < store.states.fixedLeafColumnsLength.value) {\n        fixedLayout = 'left'\n      } else if (\n        start >=\n        columns.length - store.states.rightFixedLeafColumnsLength.value\n      ) {\n        fixedLayout = 'right'\n      }\n  }\n  return fixedLayout\n    ? {\n        direction: fixedLayout,\n        start,\n        after,\n      }\n    : {}\n}\n\nexport const getFixedColumnsClass = <T>(\n  namespace: string,\n  index: number,\n  fixed: string | boolean,\n  store: any,\n  realColumns?: TableColumnCtx<T>[],\n  offset = 0\n) => {\n  const classes: string[] = []\n  const { direction, start, after } = isFixedColumn(\n    index,\n    fixed,\n    store,\n    realColumns\n  )\n  if (direction) {\n    const isLeft = direction === 'left'\n    classes.push(`${namespace}-fixed-column--${direction}`)\n    if (\n      isLeft &&\n      after + offset === store.states.fixedLeafColumnsLength.value - 1\n    ) {\n      classes.push('is-last-column')\n    } else if (\n      !isLeft &&\n      start - offset ===\n        store.states.columns.value.length -\n          store.states.rightFixedLeafColumnsLength.value\n    ) {\n      classes.push('is-first-column')\n    }\n  }\n  return classes\n}\n\nfunction getOffset<T>(offset: number, column: TableColumnCtx<T>) {\n  return (\n    offset +\n    (column.realWidth === null || Number.isNaN(column.realWidth)\n      ? Number(column.width)\n      : column.realWidth)\n  )\n}\n\nexport const getFixedColumnOffset = <T>(\n  index: number,\n  fixed: string | boolean,\n  store: any,\n  realColumns?: TableColumnCtx<T>[]\n) => {\n  const {\n    direction,\n    start = 0,\n    after = 0,\n  } = isFixedColumn(index, fixed, store, realColumns)\n  if (!direction) {\n    return\n  }\n  const styles: any = {}\n  const isLeft = direction === 'left'\n  const columns = store.states.columns.value\n  if (isLeft) {\n    styles.left = columns.slice(0, start).reduce(getOffset, 0)\n  } else {\n    styles.right = columns\n      .slice(after + 1)\n      .reverse()\n      .reduce(getOffset, 0)\n  }\n  return styles\n}\n\nexport const ensurePosition = (style, key: string) => {\n  if (!style) return\n  if (!Number.isNaN(style[key])) {\n    style[key] = `${style[key]}px`\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}